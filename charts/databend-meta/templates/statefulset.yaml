{{- $fullName := include "databend-meta.fullname" . }}
{{- $replicaCount := int .Values.replicaCount }}
{{- $bootstrap := or .Values.bootstrap (eq $replicaCount 1) }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "databend-meta.labels" . | nindent 4 }}
spec:
  serviceName: {{ $fullName }}
  replicas: {{ .Values.replicaCount }}
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      {{- include "databend-meta.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "databend-meta.selectorLabels" . | nindent 8 }}
      {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "databend-meta.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        {{- if .Values.initContainers }}
        {{- include "common.tplvalues.render" (dict "value" .Values.initContainers "context" $) | trim | nindent 8 }}
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/bash", "-c"]
          args:
            {{- if .Values.customStartupScript }}
            - {{ .Values.customStartupScript }}
            {{- else }}
            -  |
              echo "check if my service is running and run commands ";
              if [[ $POD_NAME =~ (.*)-([0-9]+)$ ]]
              then
                ID=${BASH_REMATCH[2]}
                NAME=${BASH_REMATCH[1]}
                echo "ID: $ID" "NAME : $NAME"
              {{- if $bootstrap }}
                case ${BASH_REMATCH[2]} in
                0)
                  echo "initialize leader node";
                  exec /databend-meta --id ${ID} --config-id ${ID} \
                      --single \
                      --raft-advertise-host "${POD_NAME}.{{ $fullName }}.${POD_NAMESPACE}.svc.cluster.local" \
                      --grpc-api-advertise-host "${POD_NAME}.{{ $fullName }}.${POD_NAMESPACE}.svc.cluster.local" \
                      --config-file /etc/databend/meta.yaml
                  ;;
                *)
                  echo "initialize follower node";
                  exec /databend-meta --id ${ID} --config-id ${ID} \
                      --join "${NAME}-0.{{ $fullName }}.${POD_NAMESPACE}.svc.cluster.local:28004" \
                      --raft-advertise-host "${POD_NAME}.{{ $fullName }}.${POD_NAMESPACE}.svc.cluster.local" \
                      --grpc-api-advertise-host "${POD_NAME}.{{ $fullName }}.${POD_NAMESPACE}.svc.cluster.local" \
                      --config-file /etc/databend/meta.yaml
                  ;;
                esac
              {{- else }}
                exec /databend-meta --id ${ID} --config-id ${ID} \
                  {{- range $i := until $replicaCount }}
                  --join "${NAME}-{{ $i }}.{{ $fullName }}.${POD_NAMESPACE}.svc.cluster.local:28004" \
                  {{- end }}
                  --raft-advertise-host "${POD_NAME}.{{ $fullName }}.${POD_NAMESPACE}.svc.cluster.local" \
                  --grpc-api-advertise-host "${POD_NAME}.{{ $fullName }}.${POD_NAMESPACE}.svc.cluster.local" \
                  --config-file /etc/databend/meta.yaml
              {{- end }}
              else
                echo pod name $POD_NAME is not valid && exit 1
              fi
            {{- end }}
          ports:
            {{- range $key, $val := .Values.service.ports }}
            - name: {{ $key }}
              containerPort: {{ $val }}
            {{- end }}
            - name: raft
              containerPort: 28004
          livenessProbe:
            httpGet:
              path: /v1/health
              port: admin
          readinessProbe:
            httpGet:
              path: /v1/health
              port: admin
            initialDelaySeconds: 5
            periodSeconds: 15
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- with .Values.envs }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          volumeMounts:
            - name: config
              mountPath: /etc/databend
            {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
            {{- end }}
        {{- if .Values.extraVolumeMounts }}
        {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
        {{- end }}
        {{- if .Values.sidecars }}
        {{- include "common.tplvalues.render" (dict "value" .Values.sidecars "context" $) | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            {{- if .Values.existingConfigMaps }}
            name: {{ .Values.existingConfigMap }}
            {{- else }}
            name: {{ include "databend-meta.fullname" . }}
            {{- end }}
      {{- if .Values.extraVolumes }}
      {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
      {{- end }}
{{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass }}
        {{- end }}
{{- end }}
