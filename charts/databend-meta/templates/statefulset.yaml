{{- $fullName := include "databend-meta.fullname" . }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "databend-meta.labels" . | nindent 4 }}
spec:
  serviceName: {{ $fullName }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "databend-meta.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "databend-meta.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "databend-meta.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        {{- if .Values.initContainers }}
        {{- include "common.tplvalues.render" (dict "value" .Values.initContainers "context" $) | trim | nindent 8 }}
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/bash", "-c"]
          args:
            -  |
              echo "check if my service is running and run commands ";
              if [[ $POD_NAME =~ (.*)-([0-9]+)$ ]]
              then
                ID=$((BASH_REMATCH[2] + 1))
                NAME=${BASH_REMATCH[1]}
                echo "ID: $ID"  "NAME : $NAME"
                case ${BASH_REMATCH[2]} in
                  0)
                    echo "initialize leader node";
                    /databend-meta --id ${ID} \
                      --raft-advertise-host ${POD_NAME}.{{ $fullName }}.${POD_NAMESPACE}.svc.cluster.local \
                      --config-id ${ID} \
                      --single
                  ;;
                  *)
                    echo "initialize follower node";
                    /databend-meta --id ${ID} \
                      --raft-advertise-host ${POD_NAME}.{{ $fullName }}.${POD_NAMESPACE}.svc.cluster.local \
                      --config-id ${ID} \
                      --join ${NAME}-0.{{ $fullName }}:28004
                  ;;
                esac
              else
                echo pod name $POD_NAME is not valid && exit 1
              fi
          ports:
            - name: admin
              containerPort: 28002
            - name: raft
              containerPort: 28004
            - name: grpc
              containerPort: 9191
          livenessProbe:
            httpGet:
              path: /v1/health
              port: admin
          readinessProbe:
            httpGet:
              path: /v1/health
              port: admin
            initialDelaySeconds: 5
            periodSeconds: 15
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: METASRV_LOG_DIR
              value: {{ .Values.config.logDir }}
            - name: METASRV_LOG_LEVEL
              value: {{ .Values.config.logLevel }}
            - name: ADMIN_API_ADDRESS
              value: 0.0.0.0:28002
            - name: METASRV_GRPC_API_ADDRESS
              value: 0.0.0.0:9191
            - name: KVSRV_RAFT_DIR
              value: {{ .Values.config.raft.dir }}
            - name: KVSRV_LISTEN_HOST
              value: 0.0.0.0
            - name: KVSRV_API_PORT
              value: "28004"
          volumeMounts:
            {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
            {{- end }}
        {{- if .Values.sidecars }}
        {{- include "common.tplvalues.render" (dict "value" .Values.sidecars "context" $) | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass }}
        {{- end }}
{{- end }}
